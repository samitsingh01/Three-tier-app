name: CI-CD
on:
  push:
    branches:
      - main

jobs:
  # ---------------- Backend Security & Linting ----------------
  backend-security-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # --- Backend Linting (Python) ---
      - name: Backend Linting
        run: |
          cd backend
          pip install flake8
          flake8 . || true   # report issues but don't fail

      # --- SAST for backend ---
      - name: Initialize CodeQL for backend
        uses: github/codeql-action/init@v3
        with:
          languages: python
      - name: Perform CodeQL Analysis for backend
        uses: github/codeql-action/analyze@v3
        continue-on-error: true

      # --- Software Composition Analysis for backend ---
      - name: Backend Dependency Scan
        run: |
          npm install -g snyk
          snyk test || true

  # ---------------- Frontend Security & Linting ----------------
  frontend-security-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # --- Frontend Linting (JS/React) ---
      - name: Frontend Linting
        run: |
          cd frontend
          npm install
          npx eslint . --ext .js,.jsx || true   # report issues but don't fail

      # --- SAST for frontend ---
      - name: Initialize CodeQL for frontend
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Perform CodeQL Analysis for frontend
        uses: github/codeql-action/analyze@v3
        continue-on-error: true

      # --- Software Composition Analysis for frontend ---
      - name: Frontend Dependency Scan
        run: |
          npm install -g snyk
          snyk test || true

  # ---------------- Backend Build & Push ----------------
  backend-build-and-push:
    runs-on: ubuntu-latest
    needs: backend-security-checks
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/3-tier-app-backend:latest

  # ---------------- Frontend Build & Push ----------------
  frontend-build-and-push:
    runs-on: ubuntu-latest
    needs: frontend-security-checks
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/3-tier-app-frontend:latest

  # ---------------- Kubernetes Deployment ----------------
  k8s-yaml-deploy:
    runs-on: self-hosted
    needs:
      - backend-build-and-push
      - frontend-build-and-push
    steps:
      - uses: actions/checkout@v3
      - name: Apply Kubernetes manifests
        run: kubectl apply -f k8s/
      - name: Restart Kubernetes api-resources
        run: kubectl rollout restart deployment,statefulset
