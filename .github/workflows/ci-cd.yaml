name: CI-CD
on:
  push:
    branches:
      - main

permissions:
  contents: read
  security-events: write

jobs:
  ci-pipeline:
    runs-on: ubuntu-latest
    steps:
      # ---------- Checkout once ----------
      - uses: actions/checkout@v3

      # ---------- Backend Unit Tests ----------
      - name: Backend Unit Tests
        run: |
          cd backend
          pip install -r requirements.txt
          pytest || true

      # ---------- Frontend Unit Tests ----------
      - name: Frontend Unit Tests
        run: |
          cd frontend
          npm install
          npm test -- --watchAll=false || true

      # ---------- Backend Linting ----------
      - name: Backend Linting
        run: |
          cd backend
          pip install flake8
          flake8 . || true

      # ---------- Frontend Linting ----------
      - name: Frontend Linting
        run: |
          cd frontend
          npm install
          npx eslint . --ext .js,.jsx || true

      # ---------- Backend SCA ----------
      - name: Backend Dependency Scan
        run: |
          npm install -g snyk
          snyk auth "${{ secrets.SNYK_TOKEN }}"
          cd backend
          snyk test || true

      # ---------- Frontend SCA ----------
      - name: Frontend Dependency Scan
        run: |
          npm install -g snyk
          snyk auth "${{ secrets.SNYK_TOKEN }}"
          cd frontend
          snyk test || true

      # ---------- Backend SAST ----------
      - name: Initialize CodeQL for backend
        uses: github/codeql-action/init@v3
        with:
          languages: python
      - name: Analyze backend with CodeQL
        uses: github/codeql-action/analyze@v3
        continue-on-error: true

      # ---------- Frontend SAST ----------
      - name: Initialize CodeQL for frontend
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Analyze frontend with CodeQL
        uses: github/codeql-action/analyze@v3
        continue-on-error: true

      # ---------- Backend Build & Push ----------
      - name: Log in to Docker Hub (backend)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/3-tier-app-backend:latest

      # ---------- Frontend Build & Push ----------
      - name: Log in to Docker Hub (frontend)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/3-tier-app-frontend:latest

  deploy-to-k8s:
    runs-on: self-hosted
    needs: ci-pipeline
    steps:
      - uses: actions/checkout@v3
      - name: Apply Kubernetes manifests
        run: kubectl apply -f k8s/
      - name: Restart Kubernetes resources
        run: kubectl rollout restart deployment,statefulset
