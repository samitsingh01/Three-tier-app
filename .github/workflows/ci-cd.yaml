name: CI-CD
on:
  push:
    branches:
      - main

jobs:
  backend-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3


      # --- SAST for backend ---
      - name: Backend SAST
        uses: github/codeql-action/init@v3
        with:
          languages: python  # change if your backend is Node, Java, etc.
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # --- Software Composition Analysis ---
      - name: Backend Dependency Scan
        uses: snyk/actions/setup@master
      - run: snyk test --all-projects

  frontend-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3


      # --- SAST for frontend ---
      - name: Frontend SAST
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # --- Software Composition Analysis ---
      - name: Frontend Dependency Scan
        run: |
          npm install -g snyk
          snyk test

  backend-build-and-push:
    runs-on: ubuntu-latest
    needs: backend-checks
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/3-tier-app-backend:latest

  frontend-build-and-push:
    runs-on: ubuntu-latest
    needs: frontend-checks
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/3-tier-app-frontend:latest

  k8s-yaml-deploy:
    runs-on: self-hosted
    needs:
      - backend-build-and-push
      - frontend-build-and-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Apply Kubernetes manifests
        run: kubectl apply -f k8s/
      - name: Restart Kubernetes api-resources
        run: kubectl rollout restart deployment,statefulset

  dast-scan:
    runs-on: ubuntu-latest
    needs:
      - backend-build-and-push
      - frontend-build-and-push
    steps:
      - uses: actions/checkout@v3

      # --- Start backend and frontend containers ---
      - name: Start Backend
        run: |
          docker run -d --name backend -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/3-tier-app-backend:latest
      - name: Start Frontend
        run: |
          docker run -d --name frontend -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/3-tier-app-frontend:latest

      # --- Install OWASP ZAP ---
      - name: Install OWASP ZAP
        run: |
          sudo apt-get update
          sudo apt-get install -y zaproxy

      # --- Run DAST scan ---
      - name: DAST Scan Frontend
        run: |
          zap-cli quick-scan --self-contained --start-options '-config api.disablekey=true' http://localhost:3000

      - name: DAST Scan Backend
        run: |
          zap-cli quick-scan --self-contained --start-options '-config api.disablekey=true' http://localhost:5000

      # --- Stop containers ---
      - name: Stop containers
        run: |
          docker stop backend frontend
          docker rm backend frontend
