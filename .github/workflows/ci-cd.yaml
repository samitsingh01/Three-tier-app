name: CI-CD
permissions:
  contents: read
  security-events: write # Required for CodeQL SAST

on:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  # ---------------- Backend Linting ----------------
  backend-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout backend
        uses: actions/checkout@v3

      - name: Install backend linter
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run backend lint
        run: flake8 ./backend || true

  # ---------------- Backend Unit Tests ----------------
  backend-unit-tests:
    needs: backend-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout backend
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest

      - name: Run backend unit tests
        run: pytest backend/tests || true

  # ---------------- Backend SAST ----------------
  backend-sast:
    needs: backend-unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout backend
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        continue-on-error: true

  # ---------------- Frontend Linting ----------------
  frontend-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout frontend
        uses: actions/checkout@v3

      - name: Install frontend dependencies
        run: npm install --prefix frontend

      - name: Run frontend lint
        run: npm run lint --prefix frontend || true

  # ---------------- Frontend Unit Tests ----------------
  frontend-unit-tests:
    needs: frontend-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout frontend
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install --prefix frontend

      - name: Run frontend unit tests
        run: npm test --prefix frontend -- --watchAll=false || true

  # ---------------- Frontend SAST ----------------
  frontend-sast:
    needs: frontend-unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout frontend
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        continue-on-error: true

  # ---------------- Backend Security Checks ----------------
  backend-security-checks:
    needs: backend-sast
    runs-on: ubuntu-latest
    steps:
      - name: Checkout backend
        uses: actions/checkout@v3

      - name: Backend Dependency Scan
        run: |
          npm install -g snyk
          snyk test || true

  # ---------------- Frontend Security Checks ----------------
  frontend-security-checks:
    needs: frontend-sast
    runs-on: ubuntu-latest
    steps:
      - name: Checkout frontend
        uses: actions/checkout@v3

      - name: Frontend Dependency Scan
        run: |
          npm install -g snyk
          snyk test || true

  # ---------------- Docker Build and Push ----------------
  docker-build-and-push:
    needs:
      - backend-security-checks
      - frontend-security-checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/3-tier-app-backend:latest

      - name: Build frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/3-tier-app-frontend:latest

  # ---------------- Kubernetes Deployment ----------------
  k8s-yaml-deploy:
    needs: docker-build-and-push
    runs-on: self-hosted
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Apply Kubernetes manifests
        run: kubectl apply -f k8s/
